trigger:
  branches:
    exclude:
      - '*'

pr: none

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    git clone https://ars74cobogf4pp62aeszfl4qtry2hu6hmsmd5v2ppaum3zfxw5fa@dev.azure.com/GFTAZ/GCP%20Cloud%20Practice%20Initiative/_git/sandboxscheduler $(System.DefaultWorkingDirectory)/sandboxscheduler
  displayName: 'Clone sandboxscheduler repository'

- script: |
    cd $(System.DefaultWorkingDirectory)/sandboxscheduler/sandbox
    terraform init -backend-config="bucket=sandboxtfstate" -backend-config="prefix=sanboxpolicy"
    terraform plan -var="project_id=kayprjct01-358115" -out=tfplan
  displayName: 'Terraform Init and Plan'

- script: |
    cd $(System.DefaultWorkingDirectory)/sandboxscheduler/sandbox
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'

- task: PublishPipelineArtifact@1
  displayName: 'Publish Terraform state'
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/sandboxscheduler/terraform.tfstate'
    artifactName: 'terraform-state'
